{"version":3,"sources":["Components/Filter.js","Components/Form.js","Components/Result.js","server/contacts.js","Components/SuccessNoti.js","Components/ErrorNoti.js","App.js","index.js"],"names":["Filter","setNewSearch","newSearch","onChange","event","target","value","Form","newPerson","newName","setNewName","newNumber","setNewNumber","onSubmit","replace","ev","input","type","Person","name","number","remove","className","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","Warning","error","App","useState","persons","setPersons","msg","setMsg","failure","setFailure","useEffect","contactsServices","result","filter","p","toLowerCase","includes","map","i","key","window","confirm","catch","setTimeout","preventDefault","personObject","length","matches","existing","person","concat","updateMsg","returnedPerson","ReactDOM","render","document","getElementById"],"mappings":"6MAceA,EAZA,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,UAE3B,OACI,2CAEI,2BACIC,SALG,SAACC,GAAD,OAAWH,EAAaG,EAAMC,OAAOC,QAMxCA,MAASJ,MC6BVK,EApCF,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,UAAWC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aAUtD,OACI,0BAAMC,SAAUL,GAChB,+BAAO,+BACH,4BACI,qCACA,4BACA,2BACIF,MAAOG,EACPN,SAdW,SAACC,GAAD,OACvBM,EAAWN,EAAMC,OAAOC,MAAMQ,QAAQ,eAAgB,UAiBlD,4BACI,uCACA,4BACA,2BACIR,MAAOK,EACPR,SAAU,SAAAY,GAAE,OApBAC,EAoBuBD,EAAGV,OAAOC,MAnBzDM,EAAaI,EAAMF,QAAQ,UAAW,KADf,IAACE,SAyBxB,4BAAQC,KAAK,UAAb,SCrBOC,EAXA,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAC3B,OACC,4BACO,4BAAKF,EAAL,KACA,wBAAIG,UAAU,UACTF,GAEL,4BAAI,4BAAQG,QAASF,GAAjB,gBAAJ,O,gBCPNG,EAAU,eAqBD,EAnBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB9B,EAdA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY9B,EATA,SAACC,EAAWE,GAEvB,OADgBP,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO9B,EALE,SAACG,GAEd,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCP9BM,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAgB,OAAZA,EACO,KAIP,yBAAKd,UAAU,WACVc,ICIEC,EAXC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACd,OAAc,OAAVA,EACO,KAGP,yBAAKhB,UAAU,SACVgB,ICmHEC,EAnHH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPC,EADO,KACEC,EADF,OAEoBF,mBAAS,IAF7B,mBAEP7B,EAFO,KAEIC,EAFJ,OAGgB4B,mBAAS,IAHzB,mBAGP/B,EAHO,KAGEC,EAHF,OAIoB8B,mBAAS,IAJ7B,mBAIPtC,EAJO,KAIID,EAJJ,OAKQuC,mBAAS,MALjB,mBAKPG,EALO,KAKFC,EALE,OAMgBJ,mBAAS,MANzB,mBAMPK,EANO,KAMEC,EANF,KAedC,qBAPgB,WACZC,IAEKrB,MAAK,SAAAC,GACFc,EAAWd,QAGJ,IAEnB,IAoEMqB,EAAU/C,EAEVuC,EAAQS,QAAO,SAAAC,GAAC,OACdA,EAAEhC,KAAKiC,cAAcC,SAASnD,EAAUkD,kBAF1CX,EAIN,OACI,6BACI,yCACA,kBAAC,EAAD,CAAcL,QAASO,IACvB,kBAAC,EAAD,CAASL,MAAOO,IAChB,kBAAC,EAAD,CAAQ5C,aAAcA,EAAcC,UAAWA,IAC/C,wCACA,+BAAO,+BACF+C,EAAOK,KAAI,SAACH,EAAGI,GAAJ,OACR,kBAAC,EAAD,CACIC,IAAOD,EACPpC,KAAQgC,EAAEhC,KACVC,OAAU+B,EAAE/B,OACZC,OAAU,kBAlCRW,EAkC2B,CAACmB,EAAEnB,GAAImB,EAAEhC,WAjClDsC,OAAOC,QAAP,gCAAwC1B,EAAG,GAA3C,QACAgB,EACchB,EAAG,IACZL,KAAKe,EAAWD,EAAQS,QAAO,SAAAC,GAAC,OAC7BA,EAAEnB,KAAOA,EAAG,QAEf2B,OAAM,SAAArB,GACHQ,EAAW,GAAD,OAAId,EAAG,GAAP,qCACV4B,YAAW,WACPd,EAAW,QACZ,SAXE,IAACd,UAsCd,+CACA,kBAAC,EAAD,CAAMxB,UA3FI,SAACJ,GACfA,EAAMyD,iBACN,IAAMC,EAAe,CACjB3C,KAAOV,EACPW,OAAST,EACTqB,GAAKS,EAAQsB,OAAS,GAEpBC,EAAUvB,EAAQS,QAAO,SAAAC,GAAC,OAC5BA,EAAEhC,OAAS2C,EAAa3C,QAEtB8C,EAAWD,EAAQD,OAAS,EAI5BE,GACFjB,EACYc,GACPnC,MAAK,SAAAuC,GACFxB,EAAWD,EAAQ0B,OAAOD,IAC1BxD,EAAW,IACXE,EAAa,IACbgC,EAAO,GAAD,OAAIkB,EAAa3C,KAAjB,gCACNyC,YAAW,WACPhB,EAAO,QACR,QAGf,IAAMwB,EAAY,UAAGN,EAAa3C,KAAhB,qEAC8B2C,EAAa1C,OAD3C,KAGb6C,GAAYR,OAAOC,QAAQU,IACxBpB,EACYc,EAAcE,EAAQ,GAAGhC,IAChCL,MAAK,SAAA0C,GACF3B,EAAWD,EAAQa,KAAI,SAAAH,GAAC,OACpBA,EAAEnB,KAAOgC,EAAQ,GAAGhC,GAAKmB,EAAIkB,MAEjC3D,EAAW,IACXE,EAAa,IACbgC,EAAO,GAAD,OAAIkB,EAAa3C,KAAjB,8BACNyC,YAAW,WACPhB,EAAO,QACR,QAENe,OAAM,SAAArB,GACHQ,EAAW,GAAD,OAAIkB,EAAQ,GAAG7C,KAAf,qCACVyC,YAAW,WACPd,EAAW,QACZ,SA2CarC,QAASA,EAASC,WAAYA,EACtDC,UAAWA,EAAWC,aAAcA,IACxC,yC,MCjHZ0D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f52c0cf8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({setNewSearch, newSearch}) => {\r\n    const search = (event) => setNewSearch(event.target.value)\r\n    return (\r\n        <div>\r\n            Filter for:\r\n            <input\r\n                onChange={search}\r\n                value = {newSearch}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Filter","import React from 'react'\r\n\r\nconst Form = ({newPerson, newName, setNewName, newNumber, setNewNumber}) => {\r\n    // \"abc\".match(/[a-zA-Z]*/) => ist buchstabe\r\n    // \"123\".match(/[0-9]*/) => ist zahl\r\n\r\n    const handlePersonChange = (event) => \r\n        setNewName(event.target.value.replace(/[^a-zA-Z\\s]/g, \"\"))\r\n        \r\n    const handleNumberChange = (input) => \r\n        setNewNumber(input.replace(/[^0-9]/g, \"\"))\r\n\r\n    return(\r\n        <form onSubmit={newPerson}>\r\n        <table><tbody>\r\n            <tr>\r\n                <td>name:</td> \r\n                <td>\r\n                <input\r\n                    value={newName}\r\n                    onChange={handlePersonChange}\r\n                />\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>number:</td>\r\n                <td>\r\n                <input \r\n                    value={newNumber}\r\n                    onChange={ev => handleNumberChange(ev.target.value)}\r\n                />\r\n                </td>\r\n            </tr>\r\n        </tbody></table>\r\n        <button type=\"submit\">add</button>\r\n        </form>\r\n    )\r\n}\r\nexport default Form ","import React from 'react'\r\n\r\nconst Person = ({name, number, remove}) => {\r\n    return (\r\n    \t<tr>\r\n            <td>{name} </td>\r\n            <td className=\"number\">\r\n                {number}\r\n            </td>\r\n            <td><button onClick={remove}>Delete Entry</button> </td>\r\n        </tr>\r\n    )\r\n}\r\nexport default Person","import axios from 'axios'\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = ()  => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (newObject, id) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\nconst doDelete = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll,create,update, doDelete}","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"success\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\nexport default Notification","import React from 'react'\r\n\r\nconst Warning = ({error}) => {\r\n    if (error === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className='error'>\r\n            {error}\r\n        </div>\r\n    )\r\n}\r\n   \r\nexport default Warning\r\n","import React, {useState, useEffect} from 'react'\r\nimport Filter from \"./Components/Filter\"\r\nimport Form from \"./Components/Form\"\r\nimport Person from \"./Components/Result\"\r\nimport contactsServices from './server/contacts'\r\nimport Notification from './Components/SuccessNoti'\r\nimport Warning from './Components/ErrorNoti'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [newName, setNewName] = useState('')\r\n    const [newSearch, setNewSearch] = useState(\"\")\r\n    const [msg, setMsg] = useState(null)\r\n    const [failure, setFailure] = useState(null)\r\n\r\n    const getData = () => {\r\n        contactsServices\r\n            .getAll()\r\n            .then(response => {\r\n                setPersons(response)\r\n            })\r\n    }\r\n    useEffect(getData, [])\r\n\r\n    const newPerson = (event) =>{\r\n        event.preventDefault()\r\n        const personObject = {\r\n            name : newName,\r\n            number : newNumber,\r\n            id : persons.length + 1\r\n        }\r\n        const matches = persons.filter(p => \r\n            p.name === personObject.name)\r\n\r\n        const existing = matches.length > 0 \r\n            ? true\r\n            : false\r\n\r\n        if  (!existing) {\r\n            contactsServices\r\n                .create(personObject)\r\n                .then(person => {\r\n                    setPersons(persons.concat(person)) \r\n                    setNewName(\"\")\r\n                    setNewNumber(\"\")\r\n                    setMsg(`${personObject.name} was added to the Phonebook`)\r\n                    setTimeout(() => {\r\n                        setMsg(null)\r\n                    }, 5000)\r\n                }) \r\n        }\r\n        const updateMsg = `${personObject.name} already exists,`\r\n            + `do you want to update his Number with: ${personObject.number}?`\r\n\r\n        if  (existing && window.confirm(updateMsg)) {\r\n                contactsServices\r\n                    .update(personObject, matches[0].id)\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(p => \r\n                            p.id !== matches[0].id ? p : returnedPerson\r\n                            ))\r\n                        setNewName(\"\")\r\n                        setNewNumber(\"\")\r\n                        setMsg(`${personObject.name} phone number was updated`)\r\n                        setTimeout(() => {\r\n                            setMsg(null)\r\n                        }, 5000)\r\n                    })\r\n                    .catch(error => {\r\n                        setFailure(`${matches[0].name} was already removed from server`)\r\n                        setTimeout(() => { \r\n                            setFailure(null)\r\n                        }, 5000)\r\n                    })    \r\n        }\r\n    }\r\n    const toggleRemove = (id) => {\r\n        if (window.confirm(`Do you want to delete ${id[1]} ?`)) {\r\n            contactsServices\r\n                .doDelete(id[0])\r\n                .then(setPersons(persons.filter(p =>\r\n                    p.id !== id[0] \r\n                )))\r\n                .catch(error => {\r\n                    setFailure(`${id[1]} was already removed from server`)\r\n                    setTimeout(() => { \r\n                        setFailure(null)\r\n                    }, 5000)\r\n                })    \r\n        }\r\n    }\r\n\r\n    const result = !newSearch\r\n        ? persons\r\n        : persons.filter(p =>\r\n            p.name.toLowerCase().includes(newSearch.toLowerCase()))    \r\n    \r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={msg}/>\r\n            <Warning error={failure} />\r\n            <Filter setNewSearch={setNewSearch} newSearch={newSearch}/>\r\n            <h2>Contacts</h2>\r\n            <table><tbody>\r\n                {result.map((p, i) => \r\n                    <Person \r\n                        key = {i}\r\n                        name = {p.name}\r\n                        number = {p.number}\r\n                        remove = {() => toggleRemove([p.id, p.name])}\r\n                    />\r\n                )}\r\n            </tbody></table>\r\n            <h2>Add new Contact</h2>\r\n            <Form newPerson={newPerson} newName={newName} setNewName={setNewName} \r\n                newNumber={newNumber} setNewNumber={setNewNumber} />\r\n            <h2>Numbers</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}